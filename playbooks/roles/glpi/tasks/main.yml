---
- name: Configure volumes
  ansible.builtin.include_tasks: volumes.yml

- name: Ensure required directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'
  loop:
    - /etc/glpi
    - /var/lib/glpi
    - /var/log/glpi

- name: Download GLPI archive
  ansible.builtin.get_url:
    url: "https://github.com/glpi-project/glpi/releases/download/{{ glpi_version }}/glpi-{{ glpi_version }}.tgz"
    dest: "/tmp/glpi-{{ glpi_version }}.tgz"
    mode: '0644'
  register: download_result

- name: Extract GLPI archive to web directory
  ansible.builtin.unarchive:
    src: "/tmp/glpi-{{ glpi_version }}.tgz"
    dest: /var/www/html
    remote_src: true
    owner: root
    group: root

- name: Create downstream.php
  ansible.builtin.template:
    src: downstream.php.j2
    dest: /var/www/html/glpi/inc/downstream.php
    owner: root
    group: root
    mode: '0644'

- name: Create local_define.php
  ansible.builtin.template:
    src: local_define.php.j2
    dest: /var/www/html/glpi/config/local_define.php
    owner: root
    group: root
    mode: '0644'

- name: Move GLPI files to configured directories
  ansible.builtin.copy:
    remote_src: true
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: www-data
    group: www-data
    mode: '0755'
  loop:
    - { src: '/var/www/html/glpi/config/', dest: '/etc/glpi' }
    - { src: '/var/www/html/glpi/files/', dest: '/var/lib/glpi' }
    - { src: '/var/lib/glpi/_log/', dest: '/var/log/glpi' }

- name: Change ownership of marketplace directory
  ansible.builtin.file:
    path: /var/www/html/glpi/marketplace
    owner: www-data
    group: www-data
    state: directory
    recurse: true

- name: Apache2 configuration for GLPI
  ansible.builtin.template:
    src: glpi.conf.j2
    dest: /etc/apache2/sites-available/glpi.conf
    owner: root
    group: root
    mode: '0644'
  notify: Restart apache2

- name: Disable default apache site
  ansible.builtin.command: a2dissite 000-default.conf
  changed_when: false

- name: Enable rewrite module
  ansible.builtin.apache2_module:
    name: rewrite
    state: present

- name: Enable GLPI site
  ansible.builtin.command: a2ensite glpi.conf
  changed_when: false

- name: Configure PHP settings for GLPI
  ansible.builtin.lineinfile:
    path: /etc/php/8.1/apache2/php.ini
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: true
  loop:
    - { regexp: '^upload_max_filesize.*', line: 'upload_max_filesize = {{ glpi_upload_max_filesize }}' }
    - { regexp: '^post_max_size.*', line: 'post_max_size = {{ glpi_post_max_size }}' }
    - { regexp: '^max_execution_time.*', line: 'max_execution_time = {{ glpi_max_execution_time }}' }
    - { regexp: '^max_input_vars.*', line: 'max_input_vars = {{ glpi_max_input_vars }}' }
    - { regexp: '^memory_limit.*', line: 'memory_limit = {{ glpi_memory_limit }}' }
    - { regexp: '^session.cookie_httponly.*', line: 'session.cookie_httponly = {{ glpi_session_cookie_httponly }}' }
    - { regexp: '^;?date.timezone.*', line: 'date.timezone = {{ glpi_timzone }}' }
  notify: Restart apache2
